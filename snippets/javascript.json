{
  "Named Function": {
    "prefix": "func",
    "body": ["function ${1:name}(${2:args}) {", "\t${0}", "}"],
    "description": "Named Function"
  },
  "Arrow Function": {
    "prefix": "af",
    "body": ["(${1:args}) => {${0}}"],
    "description": "Arrow Function"
  },
  "IIFE": {
    "prefix": "iife",
    "body": [";((${1:args}) => {", "\t${0}", "})()"],
    "description": "IIFE"
  },
  "Array.prototype.sort()": {
    "prefix": "sort",
    "body": ["${1}.sort((a, b) => ${2:a} - ${3:b})${0}"],
    "description": "Array.prototype.sort()"
  },
  "Object.assign()": {
    "prefix": "assign",
    "body": ["Object.assign(${1:target}, ${0:...source})"],
    "description": "Object.assign()"
  },
  "Prototype Method": {
    "prefix": ["pt", "prototype"],
    "body": [
      "${1:name}.prototype.${2:method} = function (${3}) {",
      "\t${0}",
      "}"
    ],
    "description": "Prototype Method"
  },
  "Return Promise": {
    "prefix": ["rep", "retp"],
    "body": [
      "return new Promise((resolve, reject) => {",
      "\tresolve()${0}",
      "})"
    ],
    "description": "Return Promise"
  },
  "ES Export": {
    "prefix": "exp",
    "body": ["export ${0:member}"],
    "description": "ES Export"
  },
  "ES Export All": {
    "prefix": "expa",
    "body": ["export * from ${0:member}"],
    "description": "ES Export All"
  },
  "ES Export Default": {
    "prefix": "expd",
    "body": ["export default ${0:member}"],
    "description": "ES Export Default"
  },
  "ES Export Function": {
    "prefix": "expf",
    "body": ["export function ${1:name}(${2:args}) {", "\t${0}", "}"],
    "description": "ES Export Function"
  },
  "ES Export Arrow Function": {
    "prefix": "expaf",
    "body": ["export const ${1:name} = (${2:args}) => {", "\t${0}", "}"],
    "description": "ES Export Arrow Function"
  },
  "ES Import External Module": {
    "prefix": "imp",
    "body": ["import ${0:*} from '${1:module}'"],
    "description": "ES Import"
  },
  "CJS Module Exports": {
    "prefix": "mod",
    "body": ["module.exports = ${0}"],
    "description": "CJS Module Exports"
  },
  "CJS Require": {
    "prefix": "req",
    "body": ["require(${0})"],
    "description": "CJS Require"
  },
  "setImmediate": {
    "prefix": "setim",
    "body": ["setImmediate(() => {", "\t${0}", "})"],
    "description": "setImmediate"
  },
  "Typeof": {
    "prefix": "typeof",
    "body": ["typeof ${0:source}"],
    "description": "Typeof"
  },
  "Instanceof": {
    "prefix": "instanceof",
    "body": ["${1}instanceof ${0:Object}"],
    "description": "Instanceof"
  },
  "Get Built-in Type": {
    "prefix": "call",
    "body": ["Object.prototype.toString.call(${0})"],
    "description": "Get Built-in Type"
  },
  "NextTick": {
    "prefix": "nextt",
    "body": ["nextTick(${0})"],
    "description": "NextTick"
  },
  "Process": {
    "prefix": "proc",
    "body": ["process${0}"],
    "description": "Process"
  },
  "Insert 'use strict' Statement": {
    "prefix": "us",
    "body": ["'use strict'"],
    "description": "Insert 'use strict' Statement"
  },
  "Print to dir": {
    "prefix": "dir",
    "body": ["console.dir(${0})"],
    "description": "Dir output to console"
  },
  "vue-SFC-setup": {
    "scope": "vue",
    "prefix": "vue",
    "body": [
      "<script setup lang=\"ts\">",
      "${0}",
      "</script>",
      "",
      "<template>",
      "\t",
      "</template>",
      "",
      "<style lang=\"${1}\" scoped>",
      "",
      "</style>"
    ],
    "description": "vue-SFC-setup"
  },
  "vue-script-setup": {
    "scope": "vue",
    "prefix": "script",
    "body": ["<script setup lang=\"ts\">", "${0}", "</script>"],
    "description": "vue-script-setup"
  },
  "vue-template": {
    "scope": "vue",
    "prefix": "template",
    "body": ["<template>", "\t${0}", "</template>"],
    "description": "vue-template"
  },
  "vue-style-scoped": {
    "scope": "vue",
    "prefix": "style",
    "body": ["<style lang=\"${1}\" scoped>", "${0}", "</style>"],
    "description": "vue-style-scoped"
  },
  "vue-computed": {
    "scope": "javascript,typescript,vue",
    "prefix": "comp",
    "body": ["computed(() => {$1})"],
    "description": "vue-computed"
  },
  "vue-watch-effect": {
    "scope": "javascript,typescript,vue",
    "prefix": "watchE",
    "body": ["watchEffect(() => {", "  $1", "})"],
    "description": "vue-watch-effect"
  }
}
