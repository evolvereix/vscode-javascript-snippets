{
  "TypeScript Iterable Statement": {
    "prefix": "iterable",
    "body": ["Iterable"],
    "description": "TypeScript Iterable Statement"
  },

  "TypeScript Interface Declaration": {
    "prefix": "inter",
    "body": ["interface ${1:shapes} {", "\t${0};", "}"],
    "description": "TypeScript Interface Declaration"
  },

  "TypeScript Type Declaration": {
    "prefix": "type",
    "body": ["type ${1:primitives} = {", "\t${0};", "}"],
    "description": "TypeScript Type Declaration"
  },

  "TypeScript Enums Declaration": {
    "prefix": "enum",
    "body": ["enum ${1:direction} {", "\t${0},", "}"],
    "description": "TypeScript Enums Declaration"
  },

  "TypeScript Class Implements": {
    "prefix": "classi",
    "body": ["class ${1:name} implements ${2:interface} {", "\t${0}", "}"],
    "description": "TypeScript Class Implements"
  },

  "TypeScript Import Type": {
    "prefix": "impt",
    "body": ["import type { ${0:*} } from '${1:module}'"],
    "description": "TypeScript Import Type"
  },

  "TypeScript Export Type": {
    "prefix": "expt",
    "body": ["export type ${0:member}"],
    "description": "TypeScript Export Type"
  },

  "TypeScript Export Interface": {
    "prefix": "expi",
    "body": ["export interface ${1:shapes} {", "\t${0};", "}"],
    "description": "TypeScript Export Interface"
  },

  "TypeScript Generics": {
    "prefix": "t",
    "body": ["<${0:T}>"],
    "description": "TypeScript Generics"
  },

  "TypeScript Generics Extends": {
    "prefix": "te",
    "body": ["<${1:T} extends ${0}>"],
    "description": "TypeScript Generics Extends"
  },

  "TypeScript Partial Type": {
    "prefix": "part",
    "body": ["Partial<${0:Type}>"],
    "description": "TypeScript Partial Type"
  },

  "TypeScript Required Type": {
    "prefix": "requ",
    "body": ["Required<${0:Type}>"],
    "description": "TypeScript Required Type"
  },

  "TypeScript Readonly Type": {
    "prefix": "reado",
    "body": ["Readonly<${0:Type}>"],
    "description": "TypeScript Readonly Type"
  },

  "TypeScript Record Type": {
    "prefix": "rec",
    "body": ["Record<${1:Keys}, ${0:Type}>"],
    "description": "TypeScript Record Type"
  },

  "TypeScript Pick Type": {
    "prefix": "pick",
    "body": ["Pick<${1:Type}, ${0:Keys}>"],
    "description": "TypeScript Pick Type"
  },

  "TypeScript Omit Type": {
    "prefix": "omit",
    "body": ["Omit<${1:Type}, ${0:Keys}>"],
    "description": "TypeScript Omit Type"
  },

  "TypeScript Exclude Type": {
    "prefix": "exclude",
    "body": ["Exclude<${1:Type}, ${0:ExcludedUnion}>"],
    "description": "TypeScript Exclude Type"
  },

  "TypeScript Extract Type": {
    "prefix": "extract",
    "body": ["Extract<${1:Type}, ${0:Union}>"],
    "description": "TypeScript Extract Type"
  },

  "TypeScript NonNullable Type": {
    "prefix": "nonn",
    "body": ["NonNullable<${0:Type}>"],
    "description": "TypeScript NonNullable Type"
  },

  "TypeScript Parameters Type": {
    "prefix": "para",
    "body": ["Parameters<${0:Type}>"],
    "description": "TypeScript Parameters Type"
  },

  "TypeScript ConstructorParameters Type": {
    "prefix": "constructorparameters",
    "body": ["ConstructorParameters<${0:Type}>"],
    "description": "TypeScript ConstructorParameters Type"
  },

  "TypeScript ReturnType Type": {
    "prefix": "rett",
    "body": ["ReturnType<${0:Type}>"],
    "description": "TypeScript ReturnType Type"
  },

  "TypeScript InstanceType Type": {
    "prefix": "instancetype",
    "body": ["InstanceType<${0:Type}>"],
    "description": "TypeScript InstanceType Type"
  },

  "TypeScript ThisParameterType Type": {
    "prefix": "thisparametertype",
    "body": ["ThisParameterType<${0:Type}>"],
    "description": "TypeScript ThisParameterType Type"
  },

  "TypeScript OmitThisParameter Type": {
    "prefix": "omitt",
    "body": ["OmitThisParameter<${0:Type}>"],
    "description": "TypeScript OmitThisParameter Type"
  },

  "TypeScript ThisType Type": {
    "prefix": "thist",
    "body": ["ThisType<${0:Type}>"],
    "description": "TypeScript ThisType Type"
  }
}
